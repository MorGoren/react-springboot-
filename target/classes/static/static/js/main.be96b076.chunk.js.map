{"version":3,"sources":["http-common.js","services/upload-files.service.js","components/upload-files.component.js","App.js","reportWebVitals.js","index.js"],"names":["axios","create","baseURL","headers","file","onUploadProgress","formData","FormData","append","http","post","get","UploadFiles","props","state","selectedFiles","undefined","currentFile","progress","message","fileInfos","event","this","setState","target","files","UploadService","upload","Math","round","loaded","total","then","response","data","getFiles","catch","className","role","aria-valuenow","aria-valuemin","aria-valuemax","style","width","type","onChange","selectFile","disabled","onClick","map","index","href","url","name","Component","App","margin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAEeA,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,wBACTC,QAAS,CACL,eAAgB,sBCgBT,M,+FAlBJC,EAAMC,GACT,IAAIC,EAAW,IAAIC,SAInB,OAFAD,EAASE,OAAO,OAAQJ,GAEjBK,EAAKC,KAAK,UAAWJ,EAAU,CAClCH,QAAS,CACL,eAAgB,uBAEpBE,uB,iCAKJ,OAAOI,EAAKE,IAAI,c,MCdHC,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTC,mBAAeC,EACfC,iBAAaD,EACbE,SAAU,EACVC,QAAS,GAETC,UAAW,IATA,E,uDAaRC,GACPC,KAAKC,SAAS,CACVR,cAAeM,EAAMG,OAAOC,U,+BAI1B,IAAD,OACDR,EAAcK,KAAKR,MAAMC,cAAc,GAE3CO,KAAKC,SAAS,CACVL,SAAU,EACVD,YAAaA,IAGjBS,EAAcC,OAAOV,GAAa,SAACI,GAC/B,EAAKE,SAAS,CACVL,SAAUU,KAAKC,MAAO,IAAMR,EAAMS,OAAUT,EAAMU,YAGrDC,MAAK,SAACC,GAIH,OAHA,EAAKV,SAAS,CACVJ,QAASc,EAASC,KAAKf,UAEpBO,EAAcS,cAExBH,MAAK,SAACP,GACH,EAAKF,SAAS,CACVH,UAAWK,EAAMS,UAGxBE,OAAM,WACH,EAAKb,SAAS,CACVL,SAAU,EACVC,QAAS,6BACTF,iBAAaD,OAIzBM,KAAKC,SAAS,CACVR,mBAAeC,M,0CAIF,IAAD,OAChBU,EAAcS,WAAWH,MAAK,SAACC,GAC3B,EAAKV,SAAS,CACVH,UAAWa,EAASC,Y,+BAKtB,IAAD,EAODZ,KAAKR,MALLC,EAFC,EAEDA,cACAE,EAHC,EAGDA,YACAC,EAJC,EAIDA,SACAC,EALC,EAKDA,QACAC,EANC,EAMDA,UAGJ,OACI,gCACKH,GACG,qBAAKoB,UAAU,WAAf,SACI,sBACIA,UAAU,sDACVC,KAAK,cACLC,gBAAerB,EACfsB,gBAAc,IACdC,gBAAc,MACdC,MAAO,CAAEC,MAAOzB,EAAW,KAN/B,UAQKA,EARL,SAaR,uBAAOmB,UAAU,kBAAjB,SACI,uBAAOO,KAAK,OAAOC,SAAUvB,KAAKwB,eAGtC,wBAAQT,UAAU,kBACVU,UAAWhC,EACXiC,QAAS1B,KAAKK,OAFtB,oBAOA,qBAAKU,UAAU,oBAAoBC,KAAK,QAAxC,SACKnB,IAGL,sBAAKkB,UAAU,OAAf,UACI,qBAAKA,UAAU,cAAf,2BACA,oBAAIA,UAAU,8BAAd,SACKjB,GACDA,EAAU6B,KAAI,SAAC7C,EAAM8C,GAAP,OACV,oBAAIb,UAAU,kBAAd,SACI,mBAAGc,KAAM/C,EAAKgD,IAAd,SAAoBhD,EAAKiD,QADQH,kB,GA/GxBI,aCgB1BC,MAbf,WACE,OACI,sBAAKlB,UAAU,YAAYK,MAAO,CAAEC,MAAO,SAA3C,UACE,sBAAKD,MAAO,CAAEc,OAAQ,QAAtB,UACE,8CACA,uDAGF,cAAC,EAAD,QCFOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.be96b076.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: \"http://localhost:8080\",\n    headers: {\n        \"Content-type\": \"application/json\"\n    }\n});","import http from \"../http-common\";\n\nclass UploadFilesService {\n    upload(file, onUploadProgress) {\n        let formData = new FormData();\n\n        formData.append(\"file\", file);\n\n        return http.post(\"/upload\", formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\",\n            },\n            onUploadProgress,\n        });\n    }\n\n    getFiles() {\n        return http.get(\"/files\");\n    }\n}\n\nexport default new UploadFilesService();","import React, { Component } from \"react\";\nimport UploadService from \"../services/upload-files.service\";\n\nexport default class UploadFiles extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selectedFiles: undefined,\n            currentFile: undefined,\n            progress: 0,\n            message: \"\",\n\n            fileInfos: [],\n        };\n    }\n\n    selectFile(event) {\n        this.setState({\n            selectedFiles: event.target.files,\n        });\n    }\n\n    upload() {\n        let currentFile = this.state.selectedFiles[0];\n\n        this.setState({\n            progress: 0,\n            currentFile: currentFile,\n        });\n\n        UploadService.upload(currentFile, (event) => {\n            this.setState({\n                progress: Math.round((100 * event.loaded) / event.total),\n            });\n        })\n            .then((response) => {\n                this.setState({\n                    message: response.data.message,\n                });\n                return UploadService.getFiles();\n            })\n            .then((files) => {\n                this.setState({\n                    fileInfos: files.data,\n                });\n            })\n            .catch(() => {\n                this.setState({\n                    progress: 0,\n                    message: \"Could not upload the file!\",\n                    currentFile: undefined,\n                });\n            });\n\n        this.setState({\n            selectedFiles: undefined,\n        });\n    }\n\n    componentDidMount() {\n        UploadService.getFiles().then((response) => {\n            this.setState({\n                fileInfos: response.data,\n            });\n        });\n    }\n\n    render() {\n        const {\n            selectedFiles,\n            currentFile,\n            progress,\n            message,\n            fileInfos,\n        } = this.state;\n\n        return (\n            <div>\n                {currentFile && (\n                    <div className=\"progress\">\n                        <div\n                            className=\"progress-bar progress-bar-info progress-bar-striped\"\n                            role=\"progressbar\"\n                            aria-valuenow={progress}\n                            aria-valuemin=\"0\"\n                            aria-valuemax=\"100\"\n                            style={{ width: progress + \"%\" }}\n                        >\n                            {progress}%\n                        </div>\n                    </div>\n                )}\n\n                <label className=\"btn btn-default\">\n                    <input type=\"file\" onChange={this.selectFile} />\n                </label>\n\n                <button className=\"btn btn-success\"\n                        disabled={!selectedFiles}\n                        onClick={this.upload}\n                >\n                    Upload\n                </button>\n\n                <div className=\"alert alert-light\" role=\"alert\">\n                    {message}\n                </div>\n\n                <div className=\"card\">\n                    <div className=\"card-header\">List of Files</div>\n                    <ul className=\"list-group list-group-flush\">\n                        {fileInfos &&\n                        fileInfos.map((file, index) => (\n                            <li className=\"list-group-item\" key={index}>\n                                <a href={file.url}>{file.name}</a>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport UploadFiles from \"./components/upload-files.component\";\n\nfunction App() {\n  return (\n      <div className=\"container\" style={{ width: \"600px\" }}>\n        <div style={{ margin: \"20px\" }}>\n          <h3>bezkoder.com</h3>\n          <h4>React upload Files</h4>\n        </div>\n\n        <UploadFiles />\n      </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}